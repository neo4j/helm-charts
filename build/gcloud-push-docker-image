#!/usr/bin/env bash

# This pushes a local docker image to google container registry

# make bash play nicely
#
set -o pipefail -o errtrace -o errexit -o nounset
shopt -s inherit_errexit
[[ -n "${TRACE:-}" ]] && set -o xtrace

DISTRIBUTION="${1:?Missing argument. Usage: gcloud-push-docker-image <distribution name (debian | redhat)>}"

function push_to_gcr {
    TARBALL="$1"
    EDITION="$2"
    echo TARBALL="${TARBALL}"
    echo EDITION="${EDITION}"

    DOCKER_IMG="$(docker load --input $TARBALL | tail -n1 | sed 's/.*Loaded image: \(.*\).*/\1/')"
    echo IMG=$DOCKER_IMG
    echo "##teamcity[setParameter name='env.DOCKER_IMG' value='$DOCKER_IMG']"
    DOCKER_TAG="$(date +%s)-$(echo $DOCKER_IMG | cut -d ':' -f2-)"
    echo TAG=$DOCKER_TAG
    echo "##teamcity[setParameter name='env.DOCKER_TAG' value='$DOCKER_TAG']"

    NEO4J_DOCKER_IMG="eu.gcr.io/${CLOUDSDK_CORE_PROJECT}/neo4j-helm-chart:${DOCKER_TAG}"
    docker tag $DOCKER_IMG "${NEO4J_DOCKER_IMG}"
    docker push "${NEO4J_DOCKER_IMG}"
    echo "##teamcity[setParameter name='env.NEO4J_DOCKER_IMG_${EDITION}' value='${NEO4J_DOCKER_IMG}']"
    docker rmi "${NEO4J_DOCKER_IMG}" "${DOCKER_IMG}"


    if [ "${EDITION}" == "ENTERPRISE" ]; then
        cd neo4j-admin
        NEO4J_DOCKER_BACKUP_IMG="eu.gcr.io/${CLOUDSDK_CORE_PROJECT}/neo4j-helm-chart:backup"
        echo "NEO4J_DOCKER_IMG = ${NEO4J_DOCKER_IMG} , NEO4J_DOCKER_BACKUP_IMG = ${NEO4J_DOCKER_BACKUP_IMG}"

        docker build -t "${NEO4J_DOCKER_BACKUP_IMG}" --build-arg="IMAGE=${NEO4J_DOCKER_IMG}" --build-arg="DISTRIBUTION=${DISTRIBUTION}" --no-cache -f Dockerfile .
        docker push "${NEO4J_DOCKER_BACKUP_IMG}"
        echo "##teamcity[setParameter name='env.NEO4J_DOCKER_BACKUP_IMG' value='${NEO4J_DOCKER_BACKUP_IMG}']"
        docker rmi "${NEO4J_DOCKER_BACKUP_IMG}"
        cd ..
    fi
}

if [ "${DISTRIBUTION}" == "redhat" ]; then
  push_to_gcr "$(ls | grep -E "neo4j-enterprise-(.*)ubi8-docker-loadable.tar")" "ENTERPRISE"
  push_to_gcr "$(ls | grep -E "neo4j-community-(.*)ubi8-docker-loadable.tar")" "COMMUNITY"
else
  push_to_gcr "$(ls | grep -E "neo4j-enterprise-(.*)-docker-loadable.tar" | grep -v "ubi8")" "ENTERPRISE"
  push_to_gcr "$(ls | grep -E "neo4j-community-(.*)-docker-loadable.tar" | grep -v "ubi8")" "COMMUNITY"
fi
