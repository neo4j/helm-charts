# Shared neo4j object
neo4j:
  # neo4j.name is required and must match the name of the neo4j instances this service should use
  name: "neo4j-cluster"
  edition: "enterprise"

# Annotations for the external service
annotations: { }

# Neo4j ports to include in external service
ports:
  http:
    enabled: true #Set this to false to remove HTTP from this service (this does not affect whether http is enabled for the neo4j process)
    # uncomment to publish http on port 80 (neo4j default is 7474)
    # port: 80
  https:
    enabled: true #Set this to false to remove HTTPS from this service (this does not affect whether https is enabled for the neo4j process)
    # uncomment to publish http on port 443 (neo4j default is 7474)
    # port: 443
  bolt:
    enabled: true #Set this to false to remove BOLT from this service (this does not affect whether https is enabled for the neo4j process)
    # Uncomment to explicitly specify the port to publish Neo4j Bolt (7687 is the default)
    # port: 7687
  backup:
    enabled: false #Set this to true to expose backup port externally (n.b. this could have security implications. Backup is not authenticated by default)
    # Uncomment to explicitly specify the port to publish Neo4j Backup (6362 is the default)
    # port: 6362

# A "helm.neo4j.com/neo4j.name" will be applied automatically from `neo4j.name`.
# Specify *additional* selectors to apply here (generally not required).
# If you do not want the automatic selector rename to "selectorOverride" and no "helm.neo4j.com/neo4j.name" will be applied.
selector:
  "helm.neo4j.com/neo4j.loadbalancer": "include"
  # By default the load balancer will match all Neo4j instance types.
  # When Neo4j drivers connect from outside K8s using the load balancer they will not fetch a routing table.
  # In this case drivers can only use instances included in the load balancer.
  # To only include Neo4j Core instances uncomment the setting below.
  # To only route to Neo4j Read Replicas uncomment the setting and change the value to "READ_REPLICA"
  # "helm.neo4j.com/dbms.mode": "CORE"

# Add additional Service.spec here if needed
spec:
  type: LoadBalancer
  publishNotReadyAddresses: true
  # in most cloud environments LoadBalancer type will receive an ephemeral public IP address automatically.
  # If you need to specify a static ip here use:
  #loadBalancerIP: ...

# Kubernetes cluster domain suffix
clusterDomain: "cluster.local"

# Neo4j.conf
config: {}

#this flag allows you to open internal neo4j ports necessary in multi neo4j cluster scenario
multiCluster: false
